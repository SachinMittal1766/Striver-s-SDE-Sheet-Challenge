bool match(char a, char b){
    if(a == '(' && b == ')')
        return 1;
    else if(a == '[' && b == ']')
        return 1;
    else if(a == '{' && b == '}')
        return 1;
    
    return 0;
}

bool isValidParenthesis(string expression)
{
    // Write your code here.
    stack<char> s;
    char poppedValue;
    
    for(int i=0; i<expression.length(); i++){
        if(expression[i] == '(' || expression[i] == '[' || expression[i] == '{' ){
            s.push(expression[i]);
        }else if(expression[i] == ')' || expression[i] == '}' || expression[i] == ']'){
            if(s.empty()) {
                return 0;
            }
            poppedValue = s.top();
            s.pop();
            if(!match(poppedValue, expression[i])){
                return 0;
            }
        }
    }
    return (s.empty());
}
