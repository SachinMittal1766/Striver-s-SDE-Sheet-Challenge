/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
#include<bits/stdc++.h>

vector<int> getTopView(TreeNode<int> *root) {
    // Write your code here.
     vector<int> ans;
    if(root == NULL)
        return ans;
    
    queue<pair<TreeNode<int> *, int>> q;
    map<int, vector<int>> help;
    
    q.push({root, 0});
    while(!q.empty()){
        int n = q.size();
        auto itr = q.front();
        q.pop();
        TreeNode<int> *currNode = itr.first;
            help[itr.second].push_back(currNode->val);
        
        if(currNode->left != NULL)
            q.push({currNode->left, itr.second-1});
        if(currNode->right != NULL)
            q.push({currNode->right, itr.second+1});
    }
    
    for(auto it : help){
        ans.push_back(it.second[0]);
    }
    return ans;
}
