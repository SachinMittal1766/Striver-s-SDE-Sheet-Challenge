/*
    ----------------- Binary Tree node class for reference -----------------

    template <typename T>
    class BinaryTreeNode {
        public : 
            T data;
            BinaryTreeNode<T> *left;
            BinaryTreeNode<T> *right;
            BinaryTreeNode<T> *next;

            BinaryTreeNode(T data) {
                this -> data = data;
                left = NULL;
                right = NULL;
                next = NULL;
            }
    };
*/
#include<bits/stdc++.h>

void connectNodes(BinaryTreeNode< int > *root) {
    // Write your code here.
    queue<BinaryTreeNode<int> *> q;
    q.push(root);
    
    while(!q.empty()){
        int n = q.size();
        BinaryTreeNode<int> *prevNode = NULL;
        while(n--){
            BinaryTreeNode<int> *currNode = q.front();
            q.pop();
            
            if(currNode->left != NULL)
                q.push(currNode->left);
            if(currNode->right != NULL)
                q.push(currNode->right);
            
            if(prevNode != NULL)
                prevNode->next = currNode;
            prevNode = currNode;
        }
        prevNode->next = NULL;
    }
}
